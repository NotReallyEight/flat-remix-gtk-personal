$_menu_shadow: 0 1px 6px transparentize(black, if($variant == 'light', .85, .5));
$_wm_border: if($variant=='light', transparentize(black, 0.9), transparentize($borders_color, 0.25));

// Optional compact sizes for buttons, headerbar and headerbar widgets
$_sizevariant: 'compact'; //compact otherwise
$_headerbar_height: if($_sizevariant=='default', 46px, 40px);
$_entry_height: if($_sizevariant=='default', 32px, 28px);
$_btn_pad: if($_sizevariant=='default', 4px 9px, 2px 6px);
$_hb_btn_pad: if($_sizevariant=='default', 6px, 5px);
$_tab_btn_pad: if($_sizevariant=='default', 5px 16px, 3px 12px);
$_img_btn_pad: if($_sizevariant=='default', 5px, 2px);
$_circ_btn_pad: if($_sizevariant=='default', 4px, 2px);
$_switch_margin: if($_sizevariant=='default', 10px, 7px);

/**********
 * Button *
 **********/
%button,
button {
  @at-root %button_basic, & { padding: $_btn_pad; }

  @at-root %button_active,
  &:active,
  &:checked {
    @include button(active);

    &:backdrop { box-shadow: none; }
  }

  &.image-button {
    padding-left: $_img_btn_pad;
    padding-right: $_img_btn_pad;
  }

  &.circular {
    min-height: 24px;
    min-width: 24px;
    padding: $_circ_btn_pad;
  }
}

/**********
 * Entry  *
 **********/
%entry,
entry {
  %entry_basic, & {
    min-height: $_entry_height;
    @if ($variant == 'dark') {
      background-color: $dark_fill;
    }
  }
}

headerbar %entry,
headerbar entry {
  background: $base_color;
}

/**********
 * Switch *
 **********/
switch {
  &:checked {
    border-right-width: 0; // Hack to prevent dirty right border-radius
    margin-right: 1px; // Compensate missing right border
  }

  slider {
    @extend %slider;

    &:checked {
      border-color: if($variant=='light', $suggested_border_color, $borders_color);
      &:backdrop:not(:disabled) {
        border-color: if($variant=='light', $suggested_bg_color, $backdrop_borders_color);
      }
    }

    &:disabled {
      border-color: $backdrop_borders_color;
    }
  }

}

/*************************
 * Check and Radio items *
 *************************/
check,
radio {
  &, menu menuitem &, menu menuitem:hover & {
    @include button(normal);

    &:hover {
       @include button(hover);
    }

    &:disabled, &:disabled:backdrop {
      &, &:checked, &:indeterminate {
        border-color: $borders_color;
        background-image: image($bg_color);
        color: $fg_color;
      }
    }
  }

  &, menu menuitem & {
    &:checked, &:indeterminate {
      background-image: image($selected_bg_color);
      border-color: $selected_bg_color;
      color: $bg_color;

      &:active { box-shadow: none; }
      &:backdrop {
        background-image: image($checkradio_bg_color);
        color: $bg_color;
      }
    }
  }
}

radio:not(:indeterminate):not(:checked):active:not(:backdrop) { -gtk-icon-transform: scale(0); }

check:not(:indeterminate):not(:checked):active:not(:backdrop) { -gtk-icon-transform: translate(6px, -3px) rotate(-45deg) scaleY(0.2) rotate(45deg) scaleX(0); }

radio,
check {
  &:active { -gtk-icon-transform: scale(0, 1); }

  &:checked:not(:backdrop), &:indeterminate:not(:backdrop) {
    -gtk-icon-transform: unset;
    transition: 400ms;
  }
}

/************
 * GtkScale *
 ************/
%slider,
scale slider {
  @include button(normal-alt);
  &:active, &:hover { @include button(hover-alt); }
}


/***************
 * Header bars *
 ***************/
headerbar {
  border: none;
  background: $headerbar_color;
  box-shadow: inset 0 1px $top_hilight;
  color: $text_color;

  &, &:backdrop {
    box-shadow: none;
    background: $headerbar_color;
  }
}

%titlebar,
headerbar {
  $_headerbar_widget_bg: image(if($variant == 'light', darken($bg_color, 7%), lighten($bg_color, 7%)));
  $_headerbar_widget_bg_disabled: image(if($variant == 'light', darken($bg_color, 4%), darken($bg_color, 4%)));

  .title { font-weight: normal; }

  min-height: $_headerbar_height;

  button,
  entry,
  .linked button,
  .linked entry {
    border: none;

    background: $_headerbar_widget_bg;
    &:disabled {
      background: $_headerbar_widget_bg_disabled;
    }
  }

  button:backdrop {
    background: $_headerbar_widget_bg;
    &:disabled {
      background: $_headerbar_widget_bg_disabled;
    }
  }

  stackswitcher button,
  button.toggle {
    &:active, &:checked { @include button(active); }
  }

  // Window title buttons
  windowcontrols {
    margin: 0 5px;

    &.end { margin-left: 11px; }
    &.right { margin-right: 11px; }

    button {
      &.minimize, &.maximize, &.close {
        color: transparent;
        -gtk-icon-shadow: none;
        background-image: -gtk-scaled(url('assets/titlebutton.png'), url('assets/titlebutton@2.png'));
        background-position: center;
        background-repeat: no-repeat;
        background-size: 8px;
        margin: 0;
        padding: 0;
        min-width: 0;
        min-height: 0;
        box-shadow: none;
        border: none;
        transition: all .2s;

        &:backdrop,
        &:backdrop:hover {
          background-color: if($variant == 'light', darken($bg_color, 20%), lighten($bg_color, 20%));
          background-image: -gtk-scaled(url('assets/titlebutton.png'), url('assets/titlebutton@2.png'));
          @if $transparency=='true' {
            box-shadow: inset 0 0 0 1px transparentize(black, if($variant=='light',.9, .8));
          }
        }
      }

      &.minimize {
        background-color: #fd7d00;
        &:hover {
          background-image: -gtk-scaled(url('assets/minimize.png'), url('assets/minimize@2.png'));
        }
      }

      &.maximize {
        background-color: #377cf1;
        &:hover {
          background-image: -gtk-scaled(url('assets/maximize.png'), url('assets/maximize@2.png'));
        }
      }

      &.close {
        background-color: #d31919;
        &:hover {
          background-image: -gtk-scaled(url('assets/close.png'), url('assets/close@2.png'));
        }
      }
    }
  }
}

headerbar {
  entry,
  spinbutton,
  separator:not(.sidebar),
  button {
    margin-top: $_hb_btn_pad;
    margin-bottom: $_hb_btn_pad;
  }
  switch {
    margin-top: $_switch_margin;
    margin-bottom: $_switch_margin;
  }
}

/**************
 * Tree Views *
 **************/
treeview.view {
  border-top-color: $borders-color;

  &:backdrop { border-top-color: $backdrop_borders_color; }

  header button {
    @include button(normal);

    margin-left: -1px; // fix double border

    &:hover,
    &:active { border-color: $borders_color; }

    &:backdrop { box-shadow: none; }
  }
}

/*************
 * Notebooks *
 *************/
notebook {
  > header {
    border: 0;
    padding: 0;
    background-color: $dark_fill;

    &.top,
    &.bottom,
    &.left,
    &.right {
      > tabs {
        margin: 0;

        > tab,
        > tab.reorderable-page {
          border: 1px solid transparent;

          &:hover:not(:backdrop) { @include button(hover); }

          &:checked {
            @include button(normal);
            background: image($base_color);

            &:backdrop {
              @include button(backdrop);
              background: image($base_color);
            }
          }
        }
      }
    }

    $gradient:
      rgba(black, 0),
      rgba(black, 0) calc(100% - 2px),
      rgba(black, 0.05) calc(100% - 1px),
      rgba(black, 0.15);

    &.top {
      background-image: linear-gradient(to bottom, $gradient);
      > tabs {
        margin-bottom: -3px;
        > tab {
          margin: 3px 0;
          border-radius: $button_radius $button_radius 0 0;
          &:not(:checked) { box-shadow: 4px 3px 0 -3px $borders_color; }
          &:checked, &:checked:backdrop { border-bottom-color: $base_color; }
        }
      }
    }

    &.bottom {
      background-image: linear-gradient(to top, $gradient);
      > tabs {
        margin-top: -3px;
        > tab {
          margin: 3px 0;
          border-radius: 0 0 $button_radius $button_radius;
          &:not(:checked) { box-shadow: 4px -3px 0 -3px $borders_color; }
          &:checked, &:checked:backdrop { border-top-color: $base_color; }
        }
      }
    }

    &.right {
      background-image: linear-gradient(to left, $gradient);
      > tabs {
        margin-left: -3px;
        > tab {
          margin: 0 3px;
          border-radius: 0 $button_radius $button_radius 0;
          &:not(:checked) { box-shadow: -3px 4px 0 -3px $borders_color; }
          &:checked, &:checked:backdrop { border-left-color: $base_color; }
        }
      }
    }

    &.left {
      background-image: linear-gradient(to right, $gradient);
      > tabs {
        margin-right: -3px;
        > tab {
          margin: 0 3px;
          border-radius: $button_radius 0 0 $button_radius;
          &:not(:checked) { box-shadow: 3px 4px 0 -3px $borders_color; }
          &:checked, &:checked:backdrop { border-right-color: $base_color; }
        }
      }
    }

    tab {
      border-radius: $button_radius;
      transition: $button_transition;
      min-height: 24px;

      button.flat {
        margin-top: 1px;
        margin-bottom: 1px;
      }
    }
  }
}

/**************
 * Scrollbars *
 **************/
scrollbar > range {
  > trough > slider {
    min-width: 6px;
    min-height: 6px;
  }

  &.fine-tune > trough > slider {
    min-width: 3px;
    min-height: 3px;
  }
}

/*********************
 * App Notifications *
 *********************/
.app-notification,
.app-notification.frame {
  padding: 0 10px;
  margin: 5px;
  border-radius: $button_radius+3;
  border: 1px solid transparentize($_wm_border, 0.1);
  box-shadow: $_menu_shadow;
  background-image: none;

  &:backdrop { box-shadow: none; }
}

/**********************
 * Window Decorations *
 *********************/
window {
  &.csd {
    $_border_width: 1px;
    border-radius: $window_radius+$_border_width $window_radius+$_border_width $button_radius+$_border_width $button_radius+$_border_width;
    border: $_border_width solid $base_color;

    box-shadow: 0 2px 8px 0 transparentize(black, 0.6),
                0 0 0 1px $_wm_border;

    &:backdrop {
      box-shadow: 0 2px 8px 0 transparent,
                  0 0 5px 3px transparentize(black, if($variant == 'light', .85, .75)),
                  0 0 0 1px if($variant=='light', transparentize(black, 0.97), transparentize(black, 0.25));
    }

    &.dialog.message,
    &.popup {
      box-shadow: $_menu_shadow,
                  0 0 0 1px transparentize($_wm_border, 0.1);
      border-width: 0;
    }

    &.background {
      background: linear-gradient(to bottom, $headerbar_color $_headerbar_height, $bg_color $_headerbar_height);

      headerbar { background: transparent; }
    }
  }

  &.maximized,
  &.fullscreen,
  &.tiled,
  &.tiled-top,
  &.tiled-left,
  &.tiled-right,
  &.tiled-bottom { border-width: 0; }

  &.popup { border-width: 0; }

  &.ssd {
    box-shadow: 0 0 0 1px $_wm_border;
    border-width: 0;
  }
  
}

tooltip.csd { border: 0; }

